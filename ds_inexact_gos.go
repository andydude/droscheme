//
// Droscheme - a Scheme implementation
// Copyright Â© 2012 Andrew Robbins
//
// This program is free software: it is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. You can redistribute it and/or modify it under the
// terms of the GNU Lesser General Public License (LGPL): <http://www.gnu.org/licenses/>.
//
// generated by gos2go from ds_inexact.gos
package droscheme
func _inexactZKZRexact(x Any) Any {
	return _void()
}
func _exactZKZRinexact(x Any) Any {
	if _complexZS(x) {
		return Scomplex64(ToFcmplx(x))
	}
	if _exactZS(x) {
		return Sfloat64(ToFlonum(x))
	}
	return x
}
func _acos(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).ArcCos()
}
func _asin(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).ArcSin()
}
func _cos(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).Cos()
}
func _exp(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).Exp()
}
func _log(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).Ln()
}
func _sin(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).Sin()
}
func _sqrt(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).Sqrt()
}
func _tan(x Any) Any {
	return _exactZKZRinexact(x).(TrigNum).Tan()
}
func Export_ds_inexact(env *Env) {
	env.registerGos(_inexactZKZRexact)
	env.registerGos(_exactZKZRinexact)
	env.registerGos(_acos)
	env.registerGos(_asin)
	env.registerGos(_cos)
	env.registerGos(_exp)
	env.registerGos(_log)
	env.registerGos(_sin)
	env.registerGos(_sqrt)
	env.registerGos(_tan)
}
