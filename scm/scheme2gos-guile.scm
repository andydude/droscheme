(use-modules (ice-9 match))
(use-modules (ice-9 pretty-print))
(load "base-guile.scm")
(load "ds-common.scm")
(load "ds-package.scm")
(load "ds-function.scm")
(load "scheme2gos-lib.scm")

(define emit-defines emit-defines-export)
(define emit-define-func emit-define-func-compile)
(define emit-import emit-import-compile)
(define emit-package emit-package-compile)

(define (main-guile)
  (let* ((argv (command-line))
         (raw (member "-r" argv))
         (mode (if (and (pair? argv)
                        (not (equal? (cadr argv) "-r")))
                   (cadr argv)
                   "library")))
    (droscheme-compile-mode (string->symbol mode))
;    (write (droscheme-compile-mode))))
    (let ((output (compile (read))))
          (if raw
              (write output)
              (pretty-print output)))))

(main-guile)
