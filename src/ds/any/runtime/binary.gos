(package
  ds_any_runtime
  (import (dot "ds/any") "fmt" "strconv")
  (func NewBinary
        (#(s &imm-string))
        Binary
        (return (Binary ((slice &byte) s))))
  (func #(bv Binary)
        First
        ()
        Any
        (return (&int (index bv 0))))
  (func #(_ Binary)
        GetType
        ()
        &int
        (return TypeCodeBinary))
  (func #(bv Binary)
        GetHash
        ()
        &uintptr
        (return
          (as (apply...
                _object-hash
                ((slice Any) (bv.ToVector)))
              &uintptr)))
  (func #(bv Binary)
        GoString
        ()
        &imm-string
        (:= rv #((slice &byte)))
        (range (:= (_ value) bv)
               (= rv (apply... append rv ", "))
               (= rv (strconv.AppendInt rv (&int64 value) 10)))
        (return
          (fmt.Sprintf "Binary([]Any{%s})" (index rv 2 #f))))
  (func #(bv Binary)
        Length
        ()
        &int
        (return (len bv)))
  (func #(bv Binary)
        RawString
        ()
        &imm-string
        (return (&imm-string ((slice &byte) bv))))
  (func #(bv Binary)
        Ref
        (#(k Any))
        Any
        (return (&int (index bv (as k &int)))))
  (func #(bv Binary)
        Rest
        ()
        Seq
        (return (Binary (index bv 1 #f))))
  (func #(bc Binary)
        Set
        (#(k v Any))
        Any
        (= ((index bc (as k &int))) (&byte (as v &int)))
        (return (_void)))
  (func #(bv Binary)
        SchemeString
        ()
        &imm-string
        (:= word "u8")
        (when (== (len bv) 0)
              (return (+ (+ "#" word) "()")))
        (:= rv #((slice &byte)))
        (range (:= (_ value) bv)
               (= rv (append rv #\space))
               (= rv (strconv.AppendInt rv (&int64 value) 10)))
        (return
          (fmt.Sprintf "#%s(%s)" word (index rv 1 #f))))
  (func #(bv Binary)
        ToString
        ()
        String
        (return (NewString (bv.RawString))))
  (func #(bv Binary)
        ToSymbol
        ()
        Symbol
        (return (NewSymbol (bv.RawString))))
  (func #(bv Binary)
        ToVector
        ()
        Vector
        (return (as (_bytevector->u8-vector bv) Vector))))
