(package
  ds_any_runtime
  (import (dot "ds/any"))
  (func Export
        ()
        #(env (ptr Env))
        (= env (NewEnv))
        (env.Add apply)
        (env.Add boolean=?)
        (env.Add boolean?)
        (env.Add bytevector)
        (env.Add bytevector->u8-list)
        (env.Add bytevector->u8-vector)
        (env.Add bytevector?)
        (env.Add car)
        (env.Add car+cdr)
        (env.Add cdr)
        (env.Add char->integer)
        (env.Add char=?)
        (env.Add char?)
        (env.Add cons)
        (env.Add current-error-port)
        (env.Add current-input-port)
        (env.Add current-output-port)
        (env.Add empty?)
        (env.Add eof-object)
        (env.Add eof-object?)
        (env.Add eq?)
        (env.Add equal?)
        (env.Add eqv?)
        (env.Add __error)
        (env.Add error-object)
        (env.Add error-object-irritants)
        (env.Add error-object-message)
        (env.Add error-object?)
        (env.Add eval)
        (env.Add eval-literal)
        (env.Add eval-vector)
        (env.Add exact=?)
        (env.Add exact?)
        (env.Add object-equal?)
        (env.Add pointer-of)
        (env.Add inexact=?)
        (env.Add inexact?)
        (env.Add integer->char)
        (env.Add last-pair)
        (env.Add length)
        (env.Add list)
        (env.Add list*)
        (env.Add list+)
        (env.Add list->string)
        (env.Add list->vector)
        (env.Add list?)
        (env.Add make-bytevector)
        (env.Add make-list)
        (env.Add make-parameter)
        (env.Add make-string)
        (env.Add make-vector)
        (env.Add not)
        (env.Add null)
        (env.Add null?)
        (env.Add object-hash)
        (env.Add pair?)
        (env.Add pointer=?)
        (env.Add procedure?)
        (env.Add raise)
        (env.Add __string)
        (env.Add string->list)
        (env.Add string->symbol)
        (env.Add string->vector)
        (env.Add string?)
        (env.Add symbol->string)
        (env.Add symbol=?)
        (env.Add symbol?)
        (env.Add type=?)
        (env.Add u32->bytevector)
        (env.Add u8-list->bytevector)
        (env.Add u8-vector->bytevector)
        (env.Add u8?)
        (env.Add values)
        (env.Add vector)
        (env.Add vector->list)
        (env.Add vector->string)
        (env.Add vector?)
        (env.Add void)
        (env.Add void?)
        (env.Add __->immutable-string)
        (env.Add __->scheme-string)
        (env.Add __->string)
        (return)))
