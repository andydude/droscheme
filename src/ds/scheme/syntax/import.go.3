package ds_any_syntax
import . "ds/any"
import "ds/any/runtime"
//var _ds_any_runtime = ds_any_runtime.Export()
//var apply = _ds_any_runtime.Ref("apply")
//var _apply = apply.(Named).Value().(func(proc Any, args ...Any)Any)
//var booleanZS = _ds_any_runtime.Ref("boolean?")
//var _booleanZS = booleanZS.(Named).Value().(func(a Any)Any)
//var bytevector = _ds_any_runtime.Ref("bytevector")
//var _bytevector = bytevector.(Named).Value().(func(rest ...Any)Any)
//var bytevectorZKZRu8ZKlist = _ds_any_runtime.Ref("bytevector->u8-list")
//var _bytevectorZKZRu8ZKlist = bytevectorZKZRu8ZKlist.(Named).Value().(func(a Any)Any)
//var bytevectorZKZRu8ZKvector = _ds_any_runtime.Ref("bytevector->u8-vector")
//var _bytevectorZKZRu8ZKvector = bytevectorZKZRu8ZKvector.(Named).Value().(func(a Any)Any)
//var bytevectorZS = _ds_any_runtime.Ref("bytevector?")
//var _bytevectorZS = bytevectorZS.(Named).Value().(func(a Any)Any)
//var car = _ds_any_runtime.Ref("car")
//var _car = car.(Named).Value().(func(ls Any)Any)
//var carZIcdr = _ds_any_runtime.Ref("car+cdr")
//var _carZIcdr = carZIcdr.(Named).Value().(func(ls Any)(car, cdr Any))
//var cdr = _ds_any_runtime.Ref("cdr")
//var _cdr = cdr.(Named).Value().(func(ls Any)Any)
//var charZKZRinteger = _ds_any_runtime.Ref("char->integer")
//var _charZKZRinteger = charZKZRinteger.(Named).Value().(func(ch Any)Any)
//var charZQZS = _ds_any_runtime.Ref("char=?")
//var _charZQZS = charZQZS.(Named).Value().(func(a, b Any)Any)
//var charZS = _ds_any_runtime.Ref("char?")
//var _charZS = charZS.(Named).Value().(func(a Any)Any)
//var cons = _ds_any_runtime.Ref("cons")
//var _cons = cons.(Named).Value().(func(a, b Any)Any)
//var eqZS = _ds_any_runtime.Ref("eq?")
//var _eqZS = eqZS.(Named).Value().(func(a, b Any)Any)
//var equalZS = _ds_any_runtime.Ref("equal?")
//var _equalZS = equalZS.(Named).Value().(func(a, b Any)Any)
//var errorZKobject = _ds_any_runtime.Ref("error-object")
//var _errorZKobject = errorZKobject.(Named).Value().(func(a Any, r...Any)Any)
//var errorZKobjectZKirritants = _ds_any_runtime.Ref("error-object-irritants")
//var _errorZKobjectZKirritants = errorZKobjectZKirritants.(Named).Value().(func(a Any)Any)
//var errorZKobjectZKmessage = _ds_any_runtime.Ref("error-object-message")
//var _errorZKobjectZKmessage = errorZKobjectZKmessage.(Named).Value().(func(a Any)Any)
//var errorZKobjectZS = _ds_any_runtime.Ref("error-object?")
//var _errorZKobjectZS = errorZKobjectZS.(Named).Value().(func(a Any)Any)
//var exactZQZS = _ds_any_runtime.Ref("exact=?")
//var _exactZQZS = exactZQZS.(Named).Value().(func(a, b Any)Any)
//var inexactZQZS = _ds_any_runtime.Ref("inexact=?")
//var _inexactZQZS = inexactZQZS.(Named).Value().(func(a, b Any)Any)
//var integerZKZRchar = _ds_any_runtime.Ref("integer->char")
//var _integerZKZRchar = integerZKZRchar.(Named).Value().(func(cp Any)Any)
//var lastZKpair = _ds_any_runtime.Ref("last-pair")
//var _lastZKpair = lastZKpair.(Named).Value().(func(ls Any)Any)
//
var currentZKerrorZKport = _ds_any_runtime.Ref("current-error-port")
var _currentZKerrorZKport = currentZKerrorZKport.(Named).Value().(func(o ...Any) Any)
var currentZKinputZKport = _ds_any_runtime.Ref("current-input-port")
var _currentZKinputZKport = currentZKinputZKport.(Named).Value().(func(o ...Any) Any)
//var currentZKoutputZKport = _ds_any_runtime.Ref("current-output-port")
//var _currentZKoutputZKport = currentZKoutputZKport.(Named).Value().(func(o ...Any) Any)
//var listZH = _ds_any_runtime.Ref("list*")
//var _listZH = listZH.(Named).Value().(func(o ...Any) Any)
//var listZI = _ds_any_runtime.Ref("list+")
//var _listZI = listZI.(Named).Value().(func(a Any, rest ...Any) Any)
//
//var listZS = _ds_any_runtime.Ref("list?")
//var _listZS = listZS.(Named).Value().(func(a Any)Any)
//var list = _ds_any_runtime.Ref("list")
//var _list = list.(Named).Value().(func(o ...Any)Any)
//var listZKZRstring = _ds_any_runtime.Ref("list->string")
//var _listZKZRstring = listZKZRstring.(Named).Value().(func(a Any)Any)
//var listZKZRvector = _ds_any_runtime.Ref("list->vector")
//var _listZKZRvector = listZKZRvector.(Named).Value().(func(ls Any)Any)
//var makeZKbytevector = _ds_any_runtime.Ref("make-bytevector")
//var _makeZKbytevector = makeZKbytevector.(Named).Value().(func(k Any)Any)
//var makeZKlist = _ds_any_runtime.Ref("make-list")
//var _makeZKlist = makeZKlist.(Named).Value().(func(k Any)Any)
//var makeZKstring = _ds_any_runtime.Ref("make-string")
//var _makeZKstring = makeZKstring.(Named).Value().(func(k Any)Any)
//var makeZKvector = _ds_any_runtime.Ref("make-vector")
//var _makeZKvector = makeZKvector.(Named).Value().(func(k Any)Any)
//var not = _ds_any_runtime.Ref("not")
//var _not = not.(Named).Value().(func(bl Any)Any)
//var null = _ds_any_runtime.Ref("null")
//var _null = null.(Named).Value().(func(o ...Any)Any)
//var nullZS = _ds_any_runtime.Ref("null?")
//var _nullZS = nullZS.(Named).Value().(func(a Any)Any)
//var pairZS = _ds_any_runtime.Ref("pair?")
//var _pairZS = pairZS.(Named).Value().(func(a Any)Any)
//var procedureZS = _ds_any_runtime.Ref("procedure?")
//var _procedureZS = procedureZS.(Named).Value().(func(a Any)Any)
//var raise = _ds_any_runtime.Ref("raise")
//var _raise = raise.(Named).Value().(func(err Any)Any)
//var stringZKZRlist = _ds_any_runtime.Ref("string->list")
//var _stringZKZRlist = stringZKZRlist.(Named).Value().(func(a Any)Any)
//var stringZKZRvector = _ds_any_runtime.Ref("string->vector")
//var _stringZKZRvector = stringZKZRvector.(Named).Value().(func(a Any)Any)
//var stringZS = _ds_any_runtime.Ref("string?")
//var _stringZS = stringZS.(Named).Value().(func(a Any)Any)
//var symbolZS = _ds_any_runtime.Ref("symbol?")
//var _symbolZS = symbolZS.(Named).Value().(func(a Any)Any)
//var u8ZKlistZKZRbytevector = _ds_any_runtime.Ref("u8-list->bytevector")
//var _u8ZKlistZKZRbytevector = u8ZKlistZKZRbytevector.(Named).Value().(func(a Any)Any)
//var u8ZKvectorZKZRbytevector = _ds_any_runtime.Ref("u8-vector->bytevector")
//var _u8ZKvectorZKZRbytevector = u8ZKvectorZKZRbytevector.(Named).Value().(func(a Any)Any)
//var vectorZKZRstring = _ds_any_runtime.Ref("vector->string")
//var _vectorZKZRstring = vectorZKZRstring.(Named).Value().(func(a Any)Any)
//var vector = _ds_any_runtime.Ref("vector")
//var _vector = vector.(Named).Value().(func(o ...Any)Any)
//var vectorZKZRlist = _ds_any_runtime.Ref("vector->list")
//var _vectorZKZRlist = vectorZKZRlist.(Named).Value().(func(a Any)Any)
//var vectorZS = _ds_any_runtime.Ref("vector?")
//var _vectorZS = vectorZS.(Named).Value().(func(a Any)Any)
//var void = _ds_any_runtime.Ref("void")
//var _void = void.(Named).Value().(func(o ...Any)Any)
//var voidZS = _ds_any_runtime.Ref("void?")
//var _voidZS = voidZS.(Named).Value().(func(a Any)Any)
//
//var __error = _ds_any_runtime.Ref("error")
//var _error = __error.(Named).Value().(func(a Any, r...Any)Any)
//var eofZKobject = _ds_any_runtime.Ref("eof-object")
//var _eofZKobject = eofZKobject.(Named).Value().(func()Any)
//var eofZKobjectZS = _ds_any_runtime.Ref("eof-object?")
//var _eofZKobjectZS = eofZKobjectZS.(Named).Value().(func(a Any)Any)
//var eval = _ds_any_runtime.Ref("eval")
//var _eval = eval.(Named).Value().(func(exp Any, env Any)Any)
//var evalZKliteral = _ds_any_runtime.Ref("eval-literal")
//var _evalZKliteral = evalZKliteral.(Named).Value().(func(exp Any, env Any)Any)
//var evalZKvector = _ds_any_runtime.Ref("eval-vector")
//var _evalZKvector = evalZKvector.(Named).Value().(func(exp Any, env Any)Any)
//var length = _ds_any_runtime.Ref("length")
//var _length = length.(Named).Value().(func(ls Any)Any)
//var stringZKZRsymbol = _ds_any_runtime.Ref("string->symbol")
//var _stringZKZRsymbol = stringZKZRsymbol.(Named).Value().(func(a Any)Any)
//var symbolZKZRstring = _ds_any_runtime.Ref("symbol->string")
//var _symbolZKZRstring = symbolZKZRstring.(Named).Value().(func(a Any)Any)
//
//
//// Q&D
//var _ZKZRimmutableZKstring = _ds_any_runtime.Ref("->immutable-string").(Named).Value().(func(Any)Any)
//var _ZKZRschemeZKstring = _ds_any_runtime.Ref("->scheme-string").(Named).Value().(func(Any)Any)
