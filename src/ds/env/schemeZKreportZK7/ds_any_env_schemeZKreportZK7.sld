(define-library
  (ds any env)
  (import
    (ds any runtime)
    (ds port runtime)
    (ds num runtime))
  (export
    *
    +
    -
    /
    abs
    append
    apply
    assoc
    assq
    assv
    binary-port?
    boolean?
    bytevector-copy
    bytevector-copy!
    bytevector-copy-partial
    bytevector-copy-partial!
    bytevector-length
    bytevector-u8-ref
    bytevector-u8-set!
    bytevector?
    call-with-current-continuation
    call-with-port
    call-with-values
    call/cc
    car
    caar
    cadr
    caaar
    caadr
    cadar
    caddr
    caaaar
    caaadr
    caadar
    caaddr
    cadaar
    cadadr
    caddar
    cadddr
    cdaaar
    cdaadr
    cdadar
    cdaddr
    cddaar
    cddadr
    cdddar
    cddddr
    cdaar
    cdadr
    cddar
    cdddr
    cdar
    cddr
    cdr
    ceiling
    char->integer
    char-ready?
    char<=?
    char<?
    char=?
    char>=?
    char>?
    char?
    close-input-port
    close-output-port
    close-port
    complex?
    cons
    current-error-port
    current-input-port
    current-output-port
    denominator
    dynamic-wind
    eof-object?
    eq?
    equal?
    eqv?
    error
    error-object-irritants
    error-object-message
    error-object?
    even?
    exact->inexact
    exact-integer-sqrt
    exact-integer?
    exact?
    expt
    floor
    flush-output-port
    for-each
    gcd
    get-output-bytevector
    get-output-string
    inexact->exact
    inexact?
    input-port?
    integer->char
    integer?
    lcm
    length
    list
    list->string
    list->vector
    list-copy
    list-ref
    list-set!
    list-tail
    list?
    make-bytevector
    make-list
    make-parameter
    make-string
    make-vector
    map
    max
    member
    memq
    memv
    min
    modulo
    negative?
    newline
    not
    null?
    number->string
    number?
    numerator
    odd?
    open-input-bytevector
    open-input-string
    open-output-bytevector
    open-output-string
    output-port?
    pair?
    peek-char
    peek-u8
    port-open?
    port?
    positive?
    procedure?
    quotient
    raise
    raise-continuable
    rational?
    rationalize
    read-bytevector
    read-bytevector!
    read-char
    read-line
    read-u8
    real?
    remainder
    reverse
    round
    set-car!
    set-cdr!
    string
    string->list
    string->number
    string->symbol
    string->utf8
    string->vector
    string-append
    string-copy
    string-fill!
    string-for-each
    string-length
    string-map
    string-ref
    string-set!
    string<=?
    string<?
    string=?
    string>=?
    string>?
    string?
    substring
    symbol->string
    symbol?
    textual-port?
    truncate
    u8-ready?
    utf8->string
    values
    vector
    vector->list
    vector->string
    vector-copy
    vector-fill!
    vector-for-each
    vector-length
    vector-map
    vector-ref
    vector-set!
    vector?
    with-exception-handler
    write-bytevector
    write-char
    write-partial-bytevector
    write-u8
    zero?))
